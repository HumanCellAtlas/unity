apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: unity-benchmark-deployment
  labels:
    app: unity
    status: active
    environment: production
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: unity
        status: active
        environment: production
    spec:
      containers:
        - name: app
          image: unitybenchmark/unity_benchmark_docker:latest
          ports:
            - containerPort: 443
          # The following environment variables will contain the database host,
          # user and password to connect to the PostgreSQL instance.
          volumeMounts:
          - mountPath: /etc/service-account
            name: google-project-service-account
          - mountPath: /etc/pki/tls/certs
            name: ssl-cert
          - mountPath: /etc/pki/tls/private
            name: ssl-key
          env:
            - name: DATABASE_HOST
              value: 127.0.0.1
            - name: RAILS_LOG_TO_STDOUT
              value: 'true'
            - name: GOOGLE_SITE_VERIFICATION_CODE
              valueFrom:
                secretKeyRef:
                  name: google-site-verification
                  key: verification-code
            # [START cloudsql_secrets]
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: PASSENGER_APP_ENV
              value: production
            - name: OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth-client-credentials
                  key: client_id
            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth-client-credentials
                  key: client_secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: encryption-key
                  key: encryption-key
            - name: RAILS_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: encryption-key
                  key: encryption-key
            - name: SERVICE_ACCOUNT_KEY
              value: /etc/service-account/unity-benchmark-service-account.json
            # [END cloudsql_secrets]
        # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # [START proxy_container]
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=unity-benchmark:us-central1:unity-benchmark-postgres-01=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
          env:
            - name: INSTANCE_CONNECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: instance_connection_name
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: google-project-service-account
          secret:
            secretName: unity-service-account
        - name: ssl-cert
          secret:
            secretName: ssl-certificate
        - name: ssl-key
          secret:
            secretName: ssl-keyfile
      # [END volumes]