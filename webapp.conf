server {
    listen         80;
    server_name    $hostname;
    return         301 https://$host$request_uri;
}

server {
    listen 443;
    server_name $hostname;
    root /home/app/webapp/public;
    passenger_app_root /home/app/webapp;

    # Headers
    server_tokens off;
		more_clear_headers Server;
		more_clear_headers X-Powered-By;
		add_header    X-Forwarded-Proto https always;
		add_header		X-Frame-Options   'SAMEORIGIN' always;
		add_header		Strict-Transport-Security   "max-age=15768000 ; includeSubDomains; preload" always;
		add_header		Content-Security-Policy   "default-src https: 'unsafe-inline'; img-src 'self' data: ;
																						 script-src 'self' https://cdn.plot.ly 'unsafe-inline' 'unsafe-eval'; font-src 'self' 'unsafe-inline' ;
																						 style-src 'self' 'unsafe-inline'" always;
		add_header		X-Content-Type-Options   nosniff always;

		# The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.

		# Not familiar with Passenger, and used (G)Unicorn/Thin/Puma/pure Node before?
		# Yes, this is all you need to deploy on Passenger! All the reverse proxying,
		# socket setup, process management, etc are all taken care automatically for
		# you! Learn more at https://www.phusionpassenger.com/.
		passenger_enabled on;
		passenger_user app;

		sendfile    on;
		client_max_body_size	1024M;

		proxy_read_timeout	300;

		# If this is a Ruby app, specify a Ruby version:
		passenger_ruby	/usr/bin/ruby;
		# For Ruby 2.0
		# passenger_ruby /usr/bin/ruby2.0;
		# For Ruby 1.9.3 (you can ignore the "1.9.1" suffix)
		#passenger_ruby /usr/bin/ruby1.9.1;

		ssl on;
		ssl_certificate /etc/pki/tls/certs/localhost.crt;
		ssl_certificate_key /etc/pki/tls/private/localhost.key;

		ssl_trusted_certificate /usr/local/share/ca-certificates/GeoTrust_Universal_CA.pem;

		ssl_protocols TLSv1.2;
		ssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !kECDH !DSS !MD5 !EXP !PSK !SRP !CAMELLIA !SEED';
		ssl_prefer_server_ciphers on;

		ssl_dhparam /usr/local/share/ca-certificates/dhparam.pem;
}