#!/usr/bin/env bash

# boot_from_vault
#
# shell script to export environment variables from Vault secrets or a JSON configuration file and then boot Unity
# requires the jq utility: https://stedolan.github.io/jq/ and vault: https://www.vaultproject.io

# usage error message
usage=$(
cat <<EOF

### shell script to load secrets from Vault and execute command ###
$0

[OPTIONS]
-v VALUE	set the path to the Vault configuration object
-s VALUE	set the path to the service account credentials object in Vault
-c VALUE	command to execute after loading secrets (defaults to bin/boot_docker, please wrap command in 'quotes' to ensure proper execution)
-e VALUE	set the environment to boot Unity in (defaults to development)
-H COMMAND	print this text
EOF
)

# defaults
PASSENGER_APP_ENV="development"
COMMAND="bin/boot_docker"
while getopts "v:s:c:e:H" OPTION; do
case $OPTION in
	v)
		VAULT_SECRET_PATH="$OPTARG"
		;;
	s)
		SERVICE_ACCOUNT_PATH="$OPTARG"
		;;
	c)
		COMMAND="$OPTARG"
		;;
	e)
		PASSENGER_APP_ENV="$OPTARG"
		;;
	H)
		echo "$usage"
		exit 0
		;;
	*)
    echo "unrecognized option"
    echo "$usage"
    ;;
	esac
done

if [ -z $SERVICE_ACCOUNT_PATH ] && [ -z $VAULT_SECRET_PATH ] ; then
	echo "You must supply the SERVICE_ACCOUNT_PATH [-s] & VAULT_SECRET_PATH [-v] to use this script."
	echo ""
	echo "$usage"
	exit 1
fi

if [ -n $VAULT_SECRET_PATH ] ; then
	# load raw secrets from vault
	VALS=`vault read -format=json $VAULT_SECRET_PATH`

	# for each key in the secrets config, export the value
	for key in `echo $VALS | jq .data | jq --raw-output 'keys[]'`
	do
		echo "setting value for: $key"
		curr_val=$(echo $VALS | jq .data | jq --raw-output .$key)
		export $key=$curr_val
	done
fi
# now load service account credentials
if [ -n $SERVICE_ACCOUNT_PATH ] ; then
	CREDS_VALS=`vault read -format=json $SERVICE_ACCOUNT_PATH`
	JSON_CONTENTS=`echo $CREDS_VALS | jq --raw-output .data`
	echo "setting value for GOOGLE_CLOUD_KEYFILE_JSON"
	export GOOGLE_CLOUD_KEYFILE_JSON=$(echo -n $JSON_CONTENTS)
	echo "setting value for GOOGLE_PRIVATE_KEY"
	export GOOGLE_PRIVATE_KEY=$(echo $CREDS_VALS | jq --raw-output .data.private_key)
	echo "setting value for GOOGLE_CLIENT_EMAIL"
	export GOOGLE_CLIENT_EMAIL=$(echo $CREDS_VALS | jq --raw-output .data.client_email)
	echo "setting value for GOOGLE_CLIENT_ID"
	export GOOGLE_CLIENT_ID=$(echo $CREDS_VALS | jq --raw-output .data.client_id)
	echo "setting value for GOOGLE_CLOUD_PROJECT"
	export GOOGLE_CLOUD_PROJECT=$(echo $CREDS_VALS | jq --raw-output .data.project_id)
fi
# execute requested command
$COMMAND -e $PASSENGER_APP_ENV